# global parameters
bool_plot <- F
bool_loud <- F
bool_animate <- F
set.seed(23)
P <- RM_normal(3, complex = T, hermitian = T)
#source("../archive/R/matrix-diagnostics.R")
#visualize_normal_entries(P)
size <- 5
N <- 5
beta <- 2
ensemble <- RM_ensemble(RM_beta, args = list(N = 5, beta = 2, complex = T), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
source('~/Developer/thesis-taqi/R/matrices.R')
size <- 5
N <- 5
beta <- 2
ensemble <- RM_ensemble(RM_beta, args = list(N = 5, beta = 2, complex = T), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
source('~/Developer/thesis-taqi/R/matrices.R')
source('~/Developer/thesis-taqi/R/matrices.R')
size <- 5
N <- 5
beta <- 2
ensemble <- RM_ensemble(RM_beta, args = list(N = 5, beta = 2, complex = T), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
size <- 5
N <- 5
beta <- 2
ensemble <- RM_ensemble(RM_beta, args = list(N = 5, beta, complex = T), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 2
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 2
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 2
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 2
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 2
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 2
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
View(ensemble)
View(ensemble)
View(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 4
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 5
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 3
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
beta <- 4
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
beta <- 0
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 100)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 0
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 1
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 2
complex <- T
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 2
complex <- F
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 0
complex <- F
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 1
complex <- F
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 2
complex <- F
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 3
complex <- F
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 4
complex <- F
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 5
complex <- F
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 6
complex <- F
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Parameters
size <- 5
N <- 5
beta <- 8
complex <- F
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
beta <- 100
complex <- F
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
ensemble <- RM_ensemble(RM_normal, args = list(n = 100, mean = 0, sd = 1, symm = F, complex = T, hermitian = T), size = 50)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
ensemble <- RM_ensemble(RM_normal, args = list(n = 100, mean = 0, sd = 1, symm = F, complex = T, hermitian = F), size = 50)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
GEB_spectrum <- function(N, beta, complex, size){
spec <- ensemble_spectrum(ensemble = RM_ensemble(RM_beta, args = list(N, beta, complex), size))
spectrum_plot(spec)
}
GEB_spectrum(n = 5, beta = 4, size = 10)
GEB_spectrum(N = 5, beta = 4, size = 10)
GEB_spectrum(N = 5, beta = 4, complex = T, size = 10)
GEB_spectrum(N = 5, beta = 4, complex = F, size = 10)
source('~/Developer/thesis-taqi/R/eigen.R')
ensemble <- RM_ensemble(RM_normal, args = list(n = 100, mean = 0, sd = 1, symm = F, complex = T, hermitian = F), size = 50)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Plots the eigenvalues of a given matrix P
spectrum_plot <- function(P, mat_type=""){
# Check if we have a stack of matrices or singular matrix
if(nrow(P) == ncol(P)){
array <- spectrum(P)
} else{array <- P}
# Plot parameters
r <- 1
x_window <- 0.5
x_range <- c(-(r + x_window), (r + x_window)) # Widen the width of the plot
circle <- data.frame(x0 = 0, y0 = 0, r = r)
# Color plot parameters
color0 <- "steelblue"
color1 <- "deepskyblue3"
# Plot
ggplot(array) +
geom_circle(mapping = aes(x0 = x0, y0 = y0, r = r), data = circle, color = color0) +
geom_point(data = array, aes(x = Re, y = Im, color = Re), alpha = 0.75) +
scale_color_continuous()
theme(legend.position = "none") +
labs(x = "Re", y = "Im", title = paste("Spectrum of an ",mat_type,"Ensemble",sep = "")) #+
#xlim(x_range) +
#ylim(-r,r) +
#coord_fixed(ratio = 1)
}
ensemble <- RM_ensemble(RM_normal, args = list(n = 100, mean = 0, sd = 1, symm = F, complex = T, hermitian = F), size = 50)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Plots the eigenvalues of a given matrix P
spectrum_plot <- function(P, mat_type=""){
# Check if we have a stack of matrices or singular matrix
if(nrow(P) == ncol(P)){
array <- spectrum(P)
} else{array <- P}
# Plot parameters
r <- 1
x_window <- 0.5
x_range <- c(-(r + x_window), (r + x_window)) # Widen the width of the plot
circle <- data.frame(x0 = 0, y0 = 0, r = r)
# Color plot parameters
color0 <- "steelblue"
color1 <- "deepskyblue3"
# Plot
ggplot(array) +
geom_circle(mapping = aes(x0 = x0, y0 = y0, r = r), data = circle, color = color0) +
geom_point(data = array, aes(x = Re, y = Im, color = Re), alpha = 0.75) +
scale_color_continuous() +
theme(legend.position = "none") +
labs(x = "Re", y = "Im", title = paste("Spectrum of an ",mat_type,"Ensemble",sep = "")) #+
#xlim(x_range) +
#ylim(-r,r) +
#coord_fixed(ratio = 1)
}
ensemble <- RM_ensemble(RM_normal, args = list(n = 100, mean = 0, sd = 1, symm = F, complex = T, hermitian = F), size = 50)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Plots the eigenvalues of a given matrix P
spectrum_plot <- function(P, mat_type=""){
# Check if we have a stack of matrices or singular matrix
if(nrow(P) == ncol(P)){
array <- spectrum(P)
} else{array <- P}
# Plot parameters
r <- 1
x_window <- 0.5
x_range <- c(-(r + x_window), (r + x_window)) # Widen the width of the plot
circle <- data.frame(x0 = 0, y0 = 0, r = r)
# Color plot parameters
color0 <- "steelblue"
color1 <- "deepskyblue3"
# Plot
ggplot(array) +
geom_circle(mapping = aes(x0 = x0, y0 = y0, r = r), data = circle, color = color0) +
geom_point(data = array, aes(x = Re, y = Im, color = Re), alpha = 0.75) +
scale_color_continuous(type = "viridis") +
theme(legend.position = "none") +
labs(x = "Re", y = "Im", title = paste("Spectrum of an ",mat_type,"Ensemble",sep = "")) #+
#xlim(x_range) +
#ylim(-r,r) +
#coord_fixed(ratio = 1)
}
ensemble <- RM_ensemble(RM_normal, args = list(n = 100, mean = 0, sd = 1, symm = F, complex = T, hermitian = F), size = 50)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
rainbow.colors
# Plot
ggplot(array) +
geom_circle(mapping = aes(x0 = x0, y0 = y0, r = r), data = circle, color = color0) +
geom_point(data = array, aes(x = Re, y = Im, color = Re), alpha = 0.75) +
scale_color_continuous(type = "viridis", rainbow.color) +
theme(legend.position = "none") +
labs(x = "Re", y = "Im", title = paste("Spectrum of an ",mat_type,"Ensemble",sep = "")) #+
# Plots the eigenvalues of a given matrix P
spectrum_plot <- function(P, mat_type=""){
# Check if we have a stack of matrices or singular matrix
if(nrow(P) == ncol(P)){
array <- spectrum(P)
} else{array <- P}
# Plot parameters
r <- 1
x_window <- 0.5
x_range <- c(-(r + x_window), (r + x_window)) # Widen the width of the plot
circle <- data.frame(x0 = 0, y0 = 0, r = r)
# Color plot parameters
color0 <- "steelblue"
color1 <- "deepskyblue3"
# Plot
ggplot(array) +
geom_circle(mapping = aes(x0 = x0, y0 = y0, r = r), data = circle, color = color0) +
geom_point(data = array, aes(x = Re, y = Im, color = Re), alpha = 0.75) +
scale_color_continuous(type = "viridis", rainbow.color) +
theme(legend.position = "none") +
labs(x = "Re", y = "Im", title = paste("Spectrum of an ",mat_type,"Ensemble",sep = "")) #+
#xlim(x_range) +
#ylim(-r,r) +
#coord_fixed(ratio = 1)
}
ensemble <- RM_ensemble(RM_normal, args = list(n = 100, mean = 0, sd = 1, symm = F, complex = T, hermitian = F), size = 50)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
# Plots the eigenvalues of a given matrix P
spectrum_plot <- function(P, mat_type=""){
# Check if we have a stack of matrices or singular matrix
if(nrow(P) == ncol(P)){
array <- spectrum(P)
} else{array <- P}
# Plot parameters
r <- 1
x_window <- 0.5
x_range <- c(-(r + x_window), (r + x_window)) # Widen the width of the plot
circle <- data.frame(x0 = 0, y0 = 0, r = r)
# Color plot parameters
color0 <- "steelblue"
color1 <- "deepskyblue3"
# Plot
ggplot(array) +
geom_circle(mapping = aes(x0 = x0, y0 = y0, r = r), data = circle, color = color0) +
geom_point(data = array, aes(x = Re, y = Im, color = Re), alpha = 0.75) +
scale_color_continuous(type = "viridis") +
theme(legend.position = "none") +
labs(x = "Re", y = "Im", title = paste("Spectrum of an ",mat_type,"Ensemble",sep = "")) #+
#xlim(x_range) +
#ylim(-r,r) +
#coord_fixed(ratio = 1)
}
ensemble <- RM_ensemble(RM_normal, args = list(n = 100, mean = 0, sd = 1, symm = F, complex = T, hermitian = F), size = 50)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
ensemble <- RM_ensemble(RM_normal, args = list(n = 100, mean = 0, sd = 1, symm = F, complex = T, hermitian = T), size = 50)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
View(ensemble)
View(ens_spectrum)
ensemble <- RM_ensemble(RM_normal, args = list(n = 100, mean = 0, sd = 1, symm = F, complex = T, hermitian = F), size = 50)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
ensemble <- RM_ensemble(RM_normal, args = list(n = 100, mean = 0, sd = 1, symm = F, complex = T, hermitian = T), size = 50)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
source('~/Developer/thesis-taqi/R/eigen.R')
# Plots the eigenvalues of a given matrix P
spectrum_plot <- function(P, mat_type=""){
# Check if we have a stack of matrices or singular matrix
if(nrow(P) == ncol(P)){
array <- spectrum(P)
} else{array <- P}
# Plot parameters
r <- 1
x_window <- 0.5
x_range <- c(-(r + x_window), (r + x_window)) # Widen the width of the plot
circle <- data.frame(x0 = 0, y0 = 0, r = r)
# Color plot parameters
color0 <- "steelblue"
color1 <- "deepskyblue3"
# Plot
ggplot(array) +
geom_circle(mapping = aes(x0 = x0, y0 = y0, r = r), data = circle, color = color0) +
geom_point(data = array, aes(x = Re, y = Im, color = Re), alpha = 0.75) +
scale_color_continuous(type = "viridis") +
theme(legend.position = "none") +
labs(x = "Re", y = "Im", title = paste("Spectrum of an ",mat_type,"Ensemble",sep = "")) #+
#xlim(x_range) +
#ylim(-r,r) +
#coord_fixed(ratio = 1)
}
source('~/Developer/thesis-taqi/R/eigen.R')
ensemble <- RM_ensemble(RM_normal, args = list(n = 100, mean = 0, sd = 1, symm = F, complex = T, hermitian = F), size = 50)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
ensemble <- RM_ensemble(RM_normal, args = list(n = 100, mean = 0, sd = 1, symm = F, complex = T, hermitian = T), size = 50)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
GEB_spectrum <- function(N, beta, complex, size){
spec <- ensemble_spectrum(ensemble = RM_ensemble(RM_beta, args = list(N, beta, complex), size))
spectrum_plot(spec)
}
GEB_spectrum(N = 5, beta = 4, complex = F, size = 10)
# Parameters
size <- 5
N <- 5
beta <- 100
complex <- F
# Ensemble spectrum
ensemble <- RM_ensemble(RM_beta, args = list(N, beta, complex), size = 1000)
ens_spectrum <- ensemble_spectrum(ensemble = ensemble)
spectrum_plot(ens_spectrum)
GEB_spectrum(N = 5, beta = 4, complex = T, size = 100)
GEB_spectrum(N = 10, beta = 4, complex = T, size = 100)
GEB_spectrum(N = 100, beta = 4, complex = T, size = 100)
GEB_spectrum <- function(N, beta, complex, size){
spec <- ensemble_spectrum(ensemble = RM_ensemble(RM_beta, args = list(N, beta, complex), size))
spectrum_plot(spec)
}
# Set seed
set.seed(23)
GEB_spectrum(N = 5, beta = 4, complex = F, size = 100)
GEB_spectrum <- function(N, beta, complex, size){
spec <- ensemble_spectrum(ensemble = RM_ensemble(RM_beta, args = list(N, beta, complex), size))
spectrum_plot(spec)
}
# Set seed
set.seed(23)
GEB_spectrum(N = 100, beta = 4, complex = F, size = 100)
RM_normal(N=4,complex=T,hermitian = T)
set.seed(23)
RM_normal(N=4,complex=T,hermitian = T)
set.seed(23)
RM_normal(N=4,complex=T,hermitian = T)
set.seed(23)
RM_normal(N=4,complex=T,hermitian = T)
set.seed(23)
RM_normal(N=4,complex=T,hermitian = T)
set.seed(23)
RM_normal(N=4,complex=T,hermitian = T)
set.seed(23)
RM_normal(N=4,complex=T,hermitian = T)
set.seed(23)
RM_normal(N=4,complex=T,hermitian = T)
set.seed(23)
RM_normal(N=4,complex=T,hermitian = T)
set.seed(23)
RM_normal(N=4,complex=T,hermitian = T)
set.seed(23)
RM_normal(N=4,complex=T,hermitian = T)
set.seed(23)
RM_normal(N=4,complex=T,hermitian = T)
set.seed(23)
RM_normal(N=4,complex=T,hermitian = T)
