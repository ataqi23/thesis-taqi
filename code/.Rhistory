knitr::opts_chunk$set(echo = TRUE, eval = TRUE, fig.align = "center",
message = FALSE, warning = FALSE)
library(tidyverse)
library(knitr)
library(patchwork)
library(ggfortify)
library(matrixcalc)
library(zeallot)
# Load files
# Load files
source(file = "R/matrices.R")
source(file = "R/eigenvectors.R")
source(file = "R/eigenmetrics.R")
M_vec <- c(10,25,50)
p_vec <- c(0.1,0.5,0.8)
c(M1,M2,M3) %<-% M_vec
c(p1,p2,p3) %<-% p_vec
# Generate and concatenate matrices
P_vec1 <- matrix(c(rand_M_erdos(M1,p1),
rand_M_erdos(M1,p2),
rand_M_erdos(M1,p3)),
nrow = M_vec[1])
P_vec2 <- matrix(c(rand_M_erdos(M2,p1),
rand_M_erdos(M2,p2),
rand_M_erdos(M2,p3)),
nrow = M_vec[2])
P_vec3 <- matrix(c(rand_M_erdos(M3,p1),
rand_M_erdos(M3,p2),
rand_M_erdos(M3,p3)),
nrow = M_vec[3])
set.seed(23)
P <- matrix(P_vec1[,1:M1 + 0*M1], ncol = M1)
eigen_plot(P, loud = T, mat_type = paste(p_vec[1],"-Sparse",sep=""))
eigen_summary(eigen_frame(P))
set.seed(23)
P <- matrix(P_vec1[,1:M1 + 1*M1], ncol = M1)
eigen_plot(P, loud = T,  mat_type = paste(p_vec[2],"-Sparse",sep=""))
eigen_summary(eigen_frame(P))
set.seed(23)
P <- matrix(P_vec1[,1:M1 + 2*M1], ncol = M1)
eigen_plot(P, loud = T,  mat_type = paste(p_vec[3],"-Sparse",sep=""))
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, fig.align = "center",
message = FALSE, warning = FALSE)
library(tidyverse)
library(knitr)
library(patchwork)
library(ggfortify)
library(matrixcalc)
library(zeallot)
# Load files
source(file = "R/sym_eigen.R")
source(file = "R/eigenmetrics.R")
source(file = "R/eigenvectors.R")
simulate_by_f <- function(M_max,f,ep,draws){
M_vec <- sample(1:M_max, draws, replace = T)
table <- data.frame(M = M_vec)
prop_vec <- rep(NA, length(table$M))
for(i in 1:length(table$M)){
S_curr <- RM_symm(table$M[i],f,ep)
prop <- avgprop_real_components(eigen_frame(S_curr))
#print(prop)
prop_vec[i] <- prop
}
cbind(table,prop_vec)
}
plot_f_table <- function(table, f){
ggplot() +
geom_point(data = table, aes(x=M, y=prop_vec, color = prop_vec)) +
labs(color = "EV Real", title = paste("f = ",f,sep="")) +
scale_color_gradient(high="blue", low="red")
}
M <- 15
ep <- 100
d <- ep
f <- 0.5
table <- simulate_by_f(f = f, M_max = M, ep = ep, draws = d)
head(table)
plot_f_table(table, f = f)
M <- 50
ep <- 100
d <- ep
f <- 0.5
table <- simulate_by_f(f = f, M_max = M, ep = ep, draws = d)
head(table)
plot_f_table(table, f = f)
M <- 100
ep <- 100
d <- ep
f <- 0.5
table <- simulate_by_f(f = f, M_max = M, ep = ep, draws = d)
head(table)
plot_f_table(table, f = f)
M <- 200
ep <- 100
d <- ep
f <- 0.5
table <- simulate_by_f(f = f, M_max = M, ep = ep, draws = d)
head(table)
plot_f_table(table, f = f)
simulate_by_f <- function(M_max,f,ep,draws){
M_vec <- sample(1:M_max, draws, replace = F)
table <- data.frame(M = M_vec)
prop_vec <- rep(NA, length(table$M))
for(i in 1:length(table$M)){
S_curr <- RM_symm(table$M[i],f,ep)
prop <- avgprop_real_components(eigen_frame(S_curr))
#print(prop)
prop_vec[i] <- prop
}
cbind(table,prop_vec)
}
plot_f_table <- function(table, f){
ggplot() +
geom_point(data = table, aes(x=M, y=prop_vec, color = prop_vec)) +
labs(color = "EV Real", title = paste("f = ",f,sep="")) +
scale_color_gradient(high="blue", low="red")
}
M <- 200
ep <- 100
d <- ep
f <- 0.5
table <- simulate_by_f(f = f, M_max = M, ep = ep, draws = d)
head(table)
plot_f_table(table, f = f)
plot_f_table(table, f = f)
plot_f_table(table, f = f) + stat_smooth(method = "lm")
ggplot() +
geom_point(data = table, aes(x=M, y=prop_vec, color = prop_vec)) +
labs(color = "EV Real", title = paste("f = ",f,sep="")) +
scale_color_gradient(high="blue", low="red") +
stat_smooth(method = "lm")
View(table)
funexp <- function(x){
exp(-x)
}
ggplot() +
geom_point(data = table, aes(x=M, y=prop_vec, color = prop_vec)) +
labs(color = "EV Real", title = paste("f = ",f,sep="")) +
scale_color_gradient(high="blue", low="red") +
stat_function(aes(x = x), fun = funexp)
funexp <- function(x){
exp(-x)
}
ggplot() +
geom_point(data = table, aes(x=M, y=prop_vec, color = prop_vec)) +
labs(color = "EV Real", title = paste("f = ",f,sep="")) +
scale_color_gradient(high="blue", low="red") +
stat_function(aes(x = table$M), fun = funexp)
funexp <- function(x){
exp(-x)
}
ggplot() +
geom_point(data = table, aes(x=M, y=prop_vec, color = prop_vec)) +
labs(color = "EV Real", title = paste("f = ",f,sep="")) +
scale_color_gradient(high="blue", low="red") +
stat_smooth(method = "lm", formula = prop_vec ~ I(1/M))
model <- glm(formula = prop_vec ~ I(1/M), data = table)
ggplot() +
geom_point(data = table, aes(x=M, y=prop_vec, color = prop_vec)) +
labs(color = "EV Real", title = paste("f = ",f,sep="")) +
scale_color_gradient(high="blue", low="red") +
stat_smooth(method = "lm", formula = )
model <- glm(formula = prop_vec ~ I(1/M), data = table)
model
ggplot() +
geom_point(data = table, aes(x=M, y=prop_vec, color = prop_vec)) +
labs(color = "EV Real", title = paste("f = ",f,sep="")) +
scale_color_gradient(high="blue", low="red") +
stat_smooth(method = "lm", formula = )
model <- glm(formula = prop_vec ~ I(1/M), data = table)
summary(model)
ggplot() +
geom_point(data = table, aes(x=M, y=prop_vec, color = prop_vec)) +
labs(color = "EV Real", title = paste("f = ",f,sep="")) +
scale_color_gradient(high="blue", low="red") +
stat_smooth(method = "lm", formula = )
model <- glm(formula = prop_vec ~ I(1/M), data = table)
summary(model)
pred <- function(M){
}
ggplot() +
geom_point(data = table, aes(x=M, y=prop_vec, color = prop_vec)) +
labs(color = "EV Real", title = paste("f = ",f,sep="")) +
scale_color_gradient(high="blue", low="red") +
stat_smooth(method = "lm", formula = )
model$coefficients[1]
model$coefficients[2]
model <- glm(formula = prop_vec ~ I(1/M), data = table)
summary(model)
pred <- function(M){
b0 <- model$coefficients[1]
b1 <- model$coefficients[2]
b0 + b1/M
}
ggplot() +
geom_point(data = table, aes(x=M, y=prop_vec, color = prop_vec)) +
labs(color = "EV Real", title = paste("f = ",f,sep="")) +
scale_color_gradient(high="blue", low="red") +
stat_function(mapping = aes(x = M), fun = pred)
